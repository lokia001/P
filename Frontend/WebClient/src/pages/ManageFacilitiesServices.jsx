import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css'; // ƒê·∫£m b·∫£o b·∫°n ƒë√£ c√†i ƒë·∫∑t bootstrap
import './ManageFacilitiesServices.css'; // File CSS t√πy ch·ªânh

// Gi·∫£ s·ª≠ b·∫°n c√≥ c√°c icon (c√≥ th·ªÉ d√πng react-icons ho·∫∑c SVG)
// V√≠ d·ª•: import { FaPlus, FaEdit, FaTrash, FaSearch } from 'react-icons/fa';
// ƒê·ªÉ ƒë∆°n gi·∫£n, t√¥i s·∫Ω d√πng k√Ω t·ª± Unicode ho·∫∑c text

const ManageFacilitiesServices = () => {
    const [activeTab, setActiveTab] = useState('amenities'); // 'amenities' ho·∫∑c 'services'

    // D·ªØ li·ªáu m·∫´u
    const [amenities, setAmenities] = useState([
        { id: 'AMN001', name: 'B√†n l√†m vi·ªác c√° nh√¢n', type: 'C∆° b·∫£n', description: 'B√†n l√†m vi·ªác ti√™u chu·∫©n cho 1 ng∆∞·ªùi', status: 'Ho·∫°t ƒë·ªông' },
        { id: 'AMN002', name: 'M√°y chi·∫øu ph√≤ng h·ªçp', type: 'VƒÉn ph√≤ng', description: 'M√°y chi·∫øu full HD, k·∫øt n·ªëi HDMI', status: 'B·∫£o tr√¨' },
        { id: 'AMN003', name: 'Khu v·ª±c pantry', type: 'Gi·∫£i tr√≠', description: 'C√≥ tr√†, c√† ph√™, n∆∞·ªõc l·ªçc mi·ªÖn ph√≠', status: 'Ho·∫°t ƒë·ªông' },
        { id: 'AMN004', name: 'Gh·∫ø c√¥ng th√°i h·ªçc', type: 'C∆° b·∫£n', description: 'Gh·∫ø h·ªó tr·ª£ c·ªôt s·ªëng', status: 'Kh√¥ng ho·∫°t ƒë·ªông' },
    ]);

    const [services, setServices] = useState([
        { id: 'SRV001', name: 'In ·∫•n m√†u A4', type: 'In ·∫•n', description: 'In m√†u ch·∫•t l∆∞·ª£ng cao tr√™n gi·∫•y A4', price: '2.000 VND/trang', status: 'Ho·∫°t ƒë·ªông' },
        { id: 'SRV002', name: 'Thu√™ m√†n h√¨nh LCD 24"', type: 'Thu√™ thi·∫øt b·ªã', description: 'M√†n h√¨nh LCD Dell 24 inch', price: '50.000 VND/ng√†y', status: 'Ho·∫°t ƒë·ªông' },
        { id: 'SRV003', name: 'D·ªãch v·ª• l·ªÖ t√¢n', type: 'D·ªãch v·ª• vƒÉn ph√≤ng', description: 'H·ªó tr·ª£ ti·∫øp kh√°ch, nh·∫≠n th∆∞ t·ª´', price: 'Th·ªèa thu·∫≠n', status: 'Kh√¥ng ho·∫°t ƒë·ªông' },
    ]);

    const handleEdit = (itemType, itemId) => {
        alert(`Ch·ªânh s·ª≠a ${itemType} c√≥ ID: ${itemId}`);
        // Logic ch·ªânh s·ª≠a s·∫Ω ƒë∆∞·ª£c th√™m ·ªü ƒë√¢y
    };

    const handleDelete = (itemType, itemId) => {
        if (window.confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ${itemType} n√†y kh√¥ng?`)) {
            alert(`X√≥a ${itemType} c√≥ ID: ${itemId}`);
            // Logic x√≥a s·∫Ω ƒë∆∞·ª£c th√™m ·ªü ƒë√¢y
            if (itemType === 'ti·ªán nghi') {
                setAmenities(prev => prev.filter(item => item.id !== itemId));
            } else if (itemType === 'd·ªãch v·ª•') {
                setServices(prev => prev.filter(item => item.id !== itemId));
            }
        }
    };

    const handleChangeStatus = (itemType, itemId, currentStatus) => {
        // V√≠ d·ª• ƒë∆°n gi·∫£n v·ªÅ thay ƒë·ªïi tr·∫°ng th√°i
        let newStatus = '';
        if (itemType === 'ti·ªán nghi') {
            const amenity = amenities.find(a => a.id === itemId);
            if (amenity) {
                // Logic thay ƒë·ªïi tr·∫°ng th√°i ph·ª©c t·∫°p h∆°n c√≥ th·ªÉ c·∫ßn modal ho·∫∑c danh s√°ch ch·ªçn
                // V√≠ d·ª• ƒë∆°n gi·∫£n: chuy·ªÉn ƒë·ªïi gi·ªØa Ho·∫°t ƒë·ªông v√† Kh√¥ng ho·∫°t ƒë·ªông
                newStatus = amenity.status === 'Ho·∫°t ƒë·ªông' ? 'Kh√¥ng ho·∫°t ƒë·ªông' : (amenity.status === 'Kh√¥ng ho·∫°t ƒë·ªông' ? 'B·∫£o tr√¨' : 'Ho·∫°t ƒë·ªông');
                setAmenities(prev => prev.map(item => item.id === itemId ? { ...item, status: newStatus } : item));
                alert(`ƒê√£ thay ƒë·ªïi tr·∫°ng th√°i c·ªßa ti·ªán nghi ${itemId} th√†nh ${newStatus}`);
            }
        } else if (itemType === 'd·ªãch v·ª•') {
            const service = services.find(s => s.id === itemId);
            if (service) {
                newStatus = service.status === 'Ho·∫°t ƒë·ªông' ? 'Kh√¥ng ho·∫°t ƒë·ªông' : 'Ho·∫°t ƒë·ªông';
                setServices(prev => prev.map(item => item.id === itemId ? { ...item, status: newStatus } : item));
                alert(`ƒê√£ thay ƒë·ªïi tr·∫°ng th√°i c·ªßa d·ªãch v·ª• ${itemId} th√†nh ${newStatus}`);
            }
        }
    };

    const getStatusClass = (status) => {
        switch (status) {
            case 'Ho·∫°t ƒë·ªông': return 'status-active';
            case 'B·∫£o tr√¨': return 'status-maintenance';
            case 'Kh√¥ng ho·∫°t ƒë·ªông': return 'status-inactive';
            default: return '';
        }
    };

    const renderAmenitiesTab = () => (
        <div>
            <div className="d-flex justify-content-between align-items-center mb-3 flex-wrap">
                <div className="filters d-flex flex-wrap gap-2 mb-2 mb-md-0">
                    <input type="text" className="form-control" placeholder="T√¨m ki·∫øm theo t√™n ti·ªán nghi" style={{ maxWidth: '250px' }} />
                    <select className="form-select" style={{ maxWidth: '200px' }}>
                        <option value="">T·∫•t c·∫£ lo·∫°i ti·ªán nghi</option>
                        <option value="basic">C∆° b·∫£n</option>
                        <option value="office">VƒÉn ph√≤ng</option>
                        <option value="entertainment">Gi·∫£i tr√≠</option>
                    </select>
                    <select className="form-select" style={{ maxWidth: '200px' }}>
                        <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
                        <option value="active">Ho·∫°t ƒë·ªông</option>
                        <option value="maintenance">B·∫£o tr√¨</option>
                        <option value="inactive">Kh√¥ng ho·∫°t ƒë·ªông</option>
                    </select>
                </div>
                <button className="btn btn-primary">
                    {/* <FaPlus />  */}
                    + Th√™m Ti·ªán Nghi M·ªõi
                </button>
            </div>

            <div className="table-responsive">
                <table className="table table-hover align-middle">
                    <thead className="table-light">
                        <tr>
                            <th>ID Ti·ªán Nghi</th>
                            <th>T√™n Ti·ªán Nghi</th>
                            <th>Lo·∫°i</th>
                            <th>M√¥ t·∫£</th>
                            <th>Tr·∫°ng th√°i</th>
                            <th>H√†nh ƒë·ªông</th>
                        </tr>
                    </thead>
                    <tbody>
                        {amenities.map(amenity => (
                            <tr key={amenity.id}>
                                <td>{amenity.id}</td>
                                <td>{amenity.name}</td>
                                <td>{amenity.type}</td>
                                <td title={amenity.description} className="description-truncate">{amenity.description}</td>
                                <td><span className={`badge ${getStatusClass(amenity.status)}`}>{amenity.status}</span></td>
                                <td>
                                    <button className="btn btn-sm btn-outline-secondary me-1" title="S·ª≠a" onClick={() => handleEdit('ti·ªán nghi', amenity.id)}>
                                        {/* <FaEdit /> */}
                                        ‚úèÔ∏è
                                    </button>
                                    <select
                                        className="form-select form-select-sm d-inline-block me-1"
                                        style={{ width: 'auto' }}
                                        value={amenity.status}
                                        onChange={(e) => handleChangeStatus('ti·ªán nghi', amenity.id, e.target.value)}
                                        title="Thay ƒë·ªïi tr·∫°ng th√°i"
                                    >
                                        <option value="Ho·∫°t ƒë·ªông">Ho·∫°t ƒë·ªông</option>
                                        <option value="B·∫£o tr√¨">B·∫£o tr√¨</option>
                                        <option value="Kh√¥ng ho·∫°t ƒë·ªông">Kh√¥ng ho·∫°t ƒë·ªông</option>
                                    </select>
                                    <button className="btn btn-sm btn-outline-danger" title="X√≥a" onClick={() => handleDelete('ti·ªán nghi', amenity.id)}>
                                        {/* <FaTrash /> */}
                                        üóëÔ∏è
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
    );

    const renderServicesTab = () => (
        <div>
            <div className="d-flex justify-content-between align-items-center mb-3 flex-wrap">
                <div className="filters d-flex flex-wrap gap-2 mb-2 mb-md-0">
                    <input type="text" className="form-control" placeholder="T√¨m ki·∫øm theo t√™n d·ªãch v·ª•" style={{ maxWidth: '250px' }} />
                    <select className="form-select" style={{ maxWidth: '200px' }}>
                        <option value="">T·∫•t c·∫£ lo·∫°i d·ªãch v·ª•</option>
                        <option value="printing">In ·∫•n</option>
                        <option value="equipment_rental">Thu√™ thi·∫øt b·ªã</option>
                        <option value="office_service">D·ªãch v·ª• vƒÉn ph√≤ng</option>
                    </select>
                    <select className="form-select" style={{ maxWidth: '200px' }}>
                        <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
                        <option value="active">Ho·∫°t ƒë·ªông</option>
                        <option value="inactive">Kh√¥ng ho·∫°t ƒë·ªông</option>
                    </select>
                </div>
                <button className="btn btn-primary">
                    {/* <FaPlus /> */}
                    + Th√™m D·ªãch V·ª• M·ªõi
                </button>
            </div>

            <div className="table-responsive">
                <table className="table table-hover align-middle">
                    <thead className="table-light">
                        <tr>
                            <th>ID D·ªãch V·ª•</th>
                            <th>T√™n D·ªãch V·ª•</th>
                            <th>Lo·∫°i</th>
                            <th>M√¥ t·∫£</th>
                            <th>Gi√°</th>
                            <th>Tr·∫°ng th√°i</th>
                            <th>H√†nh ƒë·ªông</th>
                        </tr>
                    </thead>
                    <tbody>
                        {services.map(service => (
                            <tr key={service.id}>
                                <td>{service.id}</td>
                                <td>{service.name}</td>
                                <td>{service.type}</td>
                                <td title={service.description} className="description-truncate">{service.description}</td>
                                <td>{service.price}</td>
                                <td><span className={`badge ${getStatusClass(service.status)}`}>{service.status}</span></td>
                                <td>
                                    <button className="btn btn-sm btn-outline-secondary me-1" title="S·ª≠a" onClick={() => handleEdit('d·ªãch v·ª•', service.id)}>
                                        {/* <FaEdit /> */}
                                        ‚úèÔ∏è
                                    </button>
                                    <select
                                        className="form-select form-select-sm d-inline-block me-1"
                                        style={{ width: 'auto' }}
                                        value={service.status}
                                        onChange={(e) => handleChangeStatus('d·ªãch v·ª•', service.id, e.target.value)}
                                        title="Thay ƒë·ªïi tr·∫°ng th√°i"
                                    >
                                        <option value="Ho·∫°t ƒë·ªông">Ho·∫°t ƒë·ªông</option>
                                        <option value="Kh√¥ng ho·∫°t ƒë·ªông">Kh√¥ng ho·∫°t ƒë·ªông</option>
                                    </select>
                                    <button className="btn btn-sm btn-outline-danger" title="X√≥a" onClick={() => handleDelete('d·ªãch v·ª•', service.id)}>
                                        {/* <FaTrash /> */}
                                        üóëÔ∏è
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
    );

    return (
        <div className="container mt-4">
            <h2 className="mb-4">Qu·∫£n L√Ω Ti·ªán Nghi & D·ªãch V·ª•</h2>

            <ul className="nav nav-tabs mb-3">
                <li className="nav-item">
                    <button
                        className={`nav-link ${activeTab === 'amenities' ? 'active' : ''}`}
                        onClick={() => setActiveTab('amenities')}
                    >
                        Ti·ªán Nghi
                    </button>
                </li>
                <li className="nav-item">
                    <button
                        className={`nav-link ${activeTab === 'services' ? 'active' : ''}`}
                        onClick={() => setActiveTab('services')}
                    >
                        D·ªãch V·ª•
                    </button>
                </li>
            </ul>

            <div className="tab-content">
                {activeTab === 'amenities' && renderAmenitiesTab()}
                {activeTab === 'services' && renderServicesTab()}
            </div>
        </div>
    );
};

export default ManageFacilitiesServices;