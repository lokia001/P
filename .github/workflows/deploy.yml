name: Auto Deploy to EC2 on Push to Main

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: ✅ Checkout code
      uses: actions/checkout@v3

    # ----------- FRONTEND ----------
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: 📦 Install & Build Frontend
      run: |
        cd Frontend/WebClient
        npm install
        npm run build
        ls -la dist

    # ----------- BACKEND -----------
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: 📦 Publish Backend
      run: dotnet publish -c Release -o publish
      working-directory: Backend.Api


 # ----------- PREPARE SERVER (Optional, if needed for first time or permissions) -----------
    - name: 📦 Prepare Database Directory on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          DB_DIR="/var/app_data/my_backend_db" # << THAY ĐỔI NẾU CẦN
          APP_USER="${{ secrets.EC2_USER }}" # Hoặc user cụ thể chạy service backend nếu khác
                                            # Ví dụ: nếu service chạy với user 'mybackenduser'
                                            # APP_USER="mybackenduser"

          echo "Ensuring database directory $DB_DIR exists..."
          sudo mkdir -p $DB_DIR
          echo "Setting ownership of $DB_DIR to $APP_USER..."
          sudo chown -R $APP_USER:$APP_USER $DB_DIR # Đảm bảo user chạy app có quyền
          sudo chmod -R 700 $DB_DIR # Quyền chỉ cho user sở hữu (an toàn hơn)
                                    # Hoặc 755 nếu group cũng cần đọc/execute
          echo "Database directory prepared."


    # ----------- CLEAN REMOTE FOLDERS -----------
    - name: 🧹 Clean remote frontend folder
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo rm -rf /var/www/html/*
          sudo mkdir -p /var/www/html
          sudo chown -R ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /var/www/html

    - name: 🧹 Clean remote backend folder
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo rm -rf /home/${{ secrets.EC2_USER }}/app/backend/*
          sudo mkdir -p /home/${{ secrets.EC2_USER }}/app/backend
          sudo chown -R ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /home/${{ secrets.EC2_USER }}/app/backend

    # ---------- UPLOAD FRONTEND ----------
    - name: 📤 Upload Frontend to EC2 (~/webclient)
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./Frontend/WebClient/dist"
        target: "/home/${{ secrets.EC2_USER }}/webclient/" # Đã sửa đường dẫn target
        debug: true

    - name: 🚚 Move Frontend to Nginx folder
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo rm -rf /var/www/html/*
          sudo mv /home/${{ secrets.EC2_USER }}/webclient/Frontend/WebClient/dist/* /var/www/html/ # Đã sửa đường dẫn mv
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 755 /var/www/html


    # ---------- UPLOAD BACKEND ----------
    - name: 🚀 Upload Backend to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: Backend.Api/publish/
        target: /home/${{ secrets.EC2_USER }}/app/backend/
        overwrite: true

# ---------- SSH & RESTART ----------
    - name: ⚙️ Configure Backend Environment and Restart Service
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Updating systemd service environment variables for backend..."

          # Định nghĩa tên service và đường dẫn đến thư mục drop-in
          SERVICE_NAME="my-backend.service" # << ĐẢM BẢO TÊN NÀY CHÍNH XÁC VỚI SERVICE CỦA BẠN
          OVERRIDE_DIR="/etc/systemd/system/${SERVICE_NAME}.d"
          OVERRIDE_FILE="$OVERRIDE_DIR/99-app-secrets.conf" # Tên file drop-in, số 99 đảm bảo nó được load cuối cùng

          # Tạo thư mục drop-in nếu chưa tồn tại
          sudo mkdir -p $OVERRIDE_DIR

          # Tạo hoặc ghi đè file drop-in với các biến môi trường mới
          # Sử dụng tee để ghi nội dung và đảm bảo quyền sudo
          echo "[Service]" | sudo tee $OVERRIDE_FILE > /dev/null
          echo "Environment=\"ASPNETCORE_ENVIRONMENT=Production\"" | sudo tee -a $OVERRIDE_FILE > /dev/null
          
          echo "Environment=\"ConnectionStrings__DefaultConnection=${{ secrets.PROD_DB_CONNECTION_STRING }}\"" | sudo tee -a $OVERRIDE_FILE > /dev/null
          echo "Environment=\"Jwt__Key=${{ secrets.PROD_JWT_KEY }}\"" | sudo tee -a $OVERRIDE_FILE > /dev/null
          echo "Environment=\"ImgBB__ApiKey=${{ secrets.PROD_IMGBB_APIKEY }}\"" | sudo tee -a $OVERRIDE_FILE > /dev/null
          echo "Environment=\"SmtpSettings__Password=${{ secrets.PROD_SMTP_PASSWORD }}\"" | sudo tee -a $OVERRIDE_FILE > /dev/null

          echo "Reloading systemd daemon and restarting service..."
          sudo systemctl daemon-reload
          sudo systemctl restart ${SERVICE_NAME}

          echo "Restarting Nginx..."
          sudo systemctl reload nginx

          echo "✅ Deployment done!"
          echo "Để xác minh biến môi trường, SSH vào server và chạy: sudo systemctl show ${SERVICE_NAME} --property=Environment"
